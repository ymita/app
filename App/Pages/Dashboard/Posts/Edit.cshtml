@page
@model App.Pages.Dashboard.Posts.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h4>投稿の編集</h4>
<hr />
<div class="row">
    <form method="post" class="row col-md-12">
        <div class="col-md-8">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Post.Id" />
            <div class="form-group">
                <label asp-for="Post.Title" class="control-label"></label>
                <input asp-for="Post.Title" class="form-control" />
                <span asp-validation-for="Post.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Post.Description" class="control-label"></label>
                <textarea asp-for="Post.Description" class="form-control" rows="10"></textarea>
                <span asp-validation-for="Post.Description" class="text-danger"></span>
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                <div>
                    <text>ステータス: </text>
                    @if (Model.Post.IsDraft)
                    {
                        <text>下書き</text>
                    }
                    else
                    {
                        <text>公開済み</text>
                    }
                </div>
                <input type="submit" name="draft" value="下書き" class="btn btn-secondary" asp-page-handler="OnPostAsync" />
                <input type="submit" name="publish" value="公開" class="btn btn-primary" asp-page-handler="OnPostAsync" />

            </div>
            <div class="form-group">
                <label asp-for="Post.PublishedDate" class="control-label"></label>
                <input asp-for="Post.PublishedDate" class="form-control" />
                <span asp-validation-for="Post.PublishedDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Tags" class="control-label"></label>
                <input id="myInput" type="text" class="form-control" onkeyup="myFunction()"/>
                <ul id="myUL">
                    @{
                        if (Model.TagsInView != null && Model.TagsInView.Count > 0)
                        {
                            @for (var i = 0; i < Model.TagsInView.Count; i++)
                            {
                                <li>
                                    <input asp-for="@Model.TagsInView[i].IsSelected" />
                                    <label asp-for="@Model.TagsInView[i].IsSelected">@Model.TagsInView[i].TagName</label>
                                    <input type="hidden" asp-for="@Model.TagsInView[i].Id" />
                                    <input type="hidden" asp-for="@Model.TagsInView[i].TagName" />
                                </li>
                            }
                        }
                    }
                    <li id="newTag" style="display: none;"></li>
                </ul>
            </div>
        </div>
    </form>
</div>
    <div>
        <a asp-page="./Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
<script>
    function myFunction() {
        // Declare variables
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById('myInput');
        filter = input.value.toUpperCase();
        ul = document.getElementById("myUL");
        li = ul.getElementsByTagName('li');

        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            txtValue = li[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }

        var visibleTags = Array.from(li).filter(x => x.style.display === "").length;
        if (visibleTags === 0 && input.value !== "") {
            console.log("show add tag menu");
            var newTag = document.getElementById("newTag");
            newTag.style.display = "";
            newTag.innerHTML =
                input.value + "<input type='button' onclick='onAddTag(this)' value='追加'></input>";
        }
    }

    function onAddTag(args) {
        alert("Tag added!");
        console.log(args);
    }
</script>